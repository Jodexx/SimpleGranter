plugins {
    id 'java'
    id 'com.rikonardo.papermake' version '1.0.6'
    id 'com.github.johnrengelman.shadow' version '8.1.1'

}

group = 'com.jodexindustries'
version = '1.0.3'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven  { url 'https://repo.alessiodp.com/releases/' }

}

dependencies {
    compileOnly "com.destroystokyo.paper:paper-api:1.12.2-R0.1-SNAPSHOT"
    compileOnly "com.github.MilkBowl:VaultAPI:1.7"
    compileOnly 'com.j256.ormlite:ormlite-jdbc:6.1'
    implementation 'net.byteflux:libby-bukkit:1.3.0'
}

compileJava.options.encoding = 'UTF-8'
def targetJavaVersion = 8
build.dependsOn(shadowJar);
tasks.jar.enabled = false

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
shadowJar {
    archiveBaseName.set(project.name)
    archiveClassifier.set('')
    archiveVersion.set(project.version)
}